spring:
  mvc:
    static-path-pattern: /app/**
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: "submission-group"
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    security:
      protocol: "SSL"
    bootstrap-servers: kafka-ed4a0dc-spoton.b.aivencloud.com:23665
    ssl:
      trust-store-location: classpath:/kafka-certs/client.truststore.jks
      trust-store-password: ""
      key-store-location:  classpath:/kafka-certs/client.keystore.p12
      key-store-password: ""
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysqldb:3306/${MYSQL_DATABASE}
    username: root
    password: ${MYSQL_ROOT_PASSWORD}
  mail:
    properties:
      mail:
        smtp:
          socketFactory:
            port: ${SMTP_PORT}
            class: javax.net.ssl.SSLSocketFactory
            fallback: 'false'
          auth: 'true'
    host: ${SMTP_SERVER}
    username: ${SMTP_USER}
    password: ${SMTP_PASSWORD}

application:
  security:
    github:
      pat: ${GITHUB_PAT}
    rapidapi:
      key: ${JUDGE0_KEY}
      host: ${JUDGE0_HOST}
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      expiration: 86400000 # a day
      refresh-token:
        expiration: 604800000 # 7 days

logging:
  level:
    org:
      springframework:
        cache: TRACE
